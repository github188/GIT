package custom.localize.Cbbh;

import java.util.Vector;

import com.efuture.commonKit.Convert;
import com.efuture.commonKit.MessageBox;
import com.efuture.commonKit.ProgressBox;
import com.efuture.javaPos.Global.CustomLocalize;
import com.efuture.javaPos.Global.DataService;
import com.efuture.javaPos.Global.GlobalInfo;
import com.efuture.javaPos.Global.GlobalVar;
import com.efuture.javaPos.Global.Language;
import com.efuture.javaPos.Logic.HykInfoQueryBS;
import com.efuture.javaPos.Payment.PaymentBank;
import com.efuture.javaPos.Struct.CustomerDef;
import com.efuture.javaPos.Struct.GoodsDef;
import com.efuture.javaPos.Struct.GoodsPopDef;
import com.efuture.javaPos.Struct.SaleGoodsDef;
import com.efuture.javaPos.Struct.SpareInfoDef;
<<<<<<< .mine
import com.efuture.javaPos.UI.Design.MutiSelectForm;
import com.efuture.javaPos.UI.Design.PersonnelGoForm;
=======
import com.efuture.javaPos.UI.Design.MutiSelectForm;
>>>>>>> .r16787

import custom.localize.Bcrm.Bcrm_DataService;
import custom.localize.Bcrm.Bcrm_SaleBS;

public class Cbbh_SaleBS extends Bcrm_SaleBS
{

	public void backSell()
	{
		super.backSell();
	}
	public boolean memberGrant()
	{

		boolean blnRet = false;

		if (isPreTakeStatus())
		{
			new MessageBox(Language.apply("预售提货状态下不允许重新刷卡"));
			return false;
		}

		// 会员卡必须在商品输入前,则输入了商品以后不能刷卡,指定小票除外
		if (GlobalInfo.sysPara.customvsgoods == 'A' && saleGoods.size() > 0 && !isNewUseSpecifyTicketBack(false))
		{
			new MessageBox(Language.apply("必须在输入商品前进行刷会员卡\n\n请把商品清除后再重刷卡"));
			return false;
		}

		// 读取会员卡
		HykInfoQueryBS bs = CustomLocalize.getDefault().createHykInfoQueryBS();
		String track2;// = bs.readMemberCard();
		if(GlobalInfo.sysPara.isUseBankReadTrack == 'Y')
		{
			track2 = getTrackByBank();
		}
		else
		{
			track2 = bs.readMemberCard();
		}
		if (track2 == null || track2.equals(""))
			return false;

		// 查找会员卡
		CustomerDef cust = bs.findMemberCard(track2);

		if (cust == null)
			return false;

		// 调出原交易的指定小票退货模式允许重新刷卡改变当前会员卡(原卡可能失效、换卡等情况)
		if (isNewUseSpecifyTicketBack(false))
		{
			// 指定小票退仅记录卡号,不执行商品重算等处理
			curCustomer = cust;
			saleHead.hykh = cust.code;
			saleHead.hytype = cust.type;
			saleHead.str4 = cust.valstr2;
			saleHead.hymaxdate = cust.maxdate;
			blnRet =  true;
		}
		else
		{
			// 记录会员卡
			blnRet =  memberGrantFinish(cust);
		}
		
		
		
		if(blnRet)
		{
			//根据返回值提示 for cbbh
			if(cust!=null && cust.memo!=null && cust.memo.length()>2 && cust.memo.charAt(1)=='Y')
			{
				new MessageBox(cust.memo.substring(2,cust.memo.length()));
			}
			
			
			//遍历查找已录入商品的CRM促销
			calcMenberCrmPop();
			return true;
		}
		return false;
	}
	
	/**
	 * 从银联刷卡器获取轨道
	 * @return
	 */
	protected String getTrackByBank()
	{
		try
		{
			
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		return "";
	}
	
	protected void calcMenberCrmPop()
	{
		if (saleGoods.size() > 0)
		{
			ProgressBox pb = null;
			try
			{
				pb = new ProgressBox();
				pb.setText("正在查找CRM促销信息,请等待...");
				if(crmPop!=null) crmPop.removeAllElements();
				
				for (int i = 0; i < saleGoods.size(); i++)
				{					
					// 查找CRM促销
					findGoodsCRMPop((SaleGoodsDef)saleGoods.elementAt(i), 
										(GoodsDef)goodsAssistant.elementAt(i), 
											(SpareInfoDef)goodsSpare.elementAt(i));
				}

		        // 计算小票应收
		        calcHeadYsje();
			}
			catch(Exception ex)
			{
				ex.printStackTrace();
			}
			finally
			{
				if (pb != null)
				{
					pb.close();
					pb = null;
				}
			}
			
		}
	}
	
	public void findGoodsCRMPop(SaleGoodsDef sg, GoodsDef goods, SpareInfoDef info)
	{
		try
		{
			GlobalInfo.sysPara.iscrmtjprice = 'N';
			if ((curCustomer != null && curCustomer.func!=null && curCustomer.func.length()>=2))
			{
				//func.charAt(1)!=N表示找商品后则查找促销规则，否则不取
				if(curCustomer.func!=null && curCustomer.func.length()>1 && curCustomer.func.charAt(1) != 'N')
				{				
				}
				else
				{
					crmPop.add(new GoodsPopDef());
					info.str1 = "0000";
					return;
				}			
			}
			
			if(curCustomer == null && GlobalInfo.sysPara.noCustFindPop=='N')
			{
				//未刷会员卡时是否查找规则促销CRM
				crmPop.add(new GoodsPopDef());
				info.str1 = "0000";
				return;
			}
			
			//super.findGoodsCRMPop(sg, goods, info);
			
			String newyhsp = "90000000";
			String cardno = null;
			String cardtype = null;

			if ((curCustomer != null && curCustomer.iszk == 'Y'))
			{
				cardno = curCustomer.code;
				cardtype = curCustomer.type;
			}

			GoodsPopDef popDef = new GoodsPopDef();

			// 非促销商品 或者在退货时，不查找促销信息
			((Bcrm_DataService) DataService.getDefault()).findPopRuleCRM(popDef, sg.code, sg.gz, sg.uid, goods.specinfo, sg.catid, sg.ppcode,
																			saleHead.rqsj, cardno, cardtype, saletype);
			// 换货状态下，不使用任何促销
			if (popDef.yhspace == 0 || hhflag == 'Y')
			{
				popDef.yhspace = 0;
				popDef.memo = "";
				popDef.poppfjzkfd = 1;
			}

			//将收券规则放入GOODSDEF 列表
			goods.memo = popDef.str2;
			goods.num1 = popDef.num1;
			goods.num2 = popDef.num2;
			goods.str4 = popDef.mode;
			info.char3 = popDef.type;

			// 促销联比例
			sg.xxtax = Convert.toDouble(popDef.ksrq); // 促销联比例
			goods.xxtax = Convert.toDouble(popDef.ksrq);
			if (goods.memo == null) goods.memo = "";

			// 增加CRM促销信息
			crmPop.add(popDef);

			// 标志是否为9开头扩展的控制
			boolean append = false;
			// 无促销,此会员不允许促销
			if (popDef.yhspace == 0)
			{
				append = false;
				info.str1 = "0000";
			}
			else if (popDef.yhspace == Integer.parseInt(newyhsp))
			{
				append = true;
				info.str1 = newyhsp;
			}
			else
			{

				if (String.valueOf(popDef.yhspace).charAt(0) != '9')
				{
					if (GlobalInfo.sysPara.iscrmtjprice == 'Y') info.str1 = Convert.increaseInt(popDef.yhspace, 5).substring(0, 4);
					else {
						//info.str1 = Convert.increaseInt(popDef.yhspace, 4);//old code
						//wangyong modify by 2014.3.13
						//1是，0否
						//重百CRM为：满减，返券，返礼，是否特价
						//而百货CRM为：打折，满减，返券，返礼
						//所以，转换为百货CRM模式处理
						info.str1 = Convert.increaseInt(popDef.yhspace, 4).substring(0, 3);//重百的最后一位为'是否特价'，且没有用，所以取前三位
						info.str1 = "0" + info.str1;//然后左补0（百货CRM处理模式：打折，满减，返券，返礼）					
					}

					append = false;
				}
				else
				{
					info.str1 = String.valueOf(popDef.yhspace);

					append = true;
				}
				//询问参加活动类型 满减或者满增
				String yh = info.str1;

				if (append) yh = yh.substring(1);

				StringBuffer buff = new StringBuffer(yh);
				Vector contents = new Vector();

				for (int i = 0; i < buff.length(); i++)
				{
					// 2-任选促销/1-存在促销/0-无促销
					if (buff.charAt(i) == '2')
					{
						if (i == 0)
						{
							contents.add(new String[] { "D", Language.apply("参与打折促销活动"), "0" });
						}
						else if (i == 1)
						{
							contents.add(new String[] { "J", Language.apply("参与减现促销活动"), "1" });
						}
						else if (i == 2)
						{
							contents.add(new String[] { "Q", Language.apply("参与返券促销活动"), "2" });
						}
						else if (i == 3)
						{
							contents.add(new String[] { "Z", Language.apply("参与赠品促销活动"), "3" });
						}
						else if (i == 5)
						{
							contents.add(new String[] { "F", Language.apply("参与积分活动"), "5" });
						}
					}
				}

				if (contents.size() <= 1)
				{
					if (contents.size() > 0)
					{
						String[] row = (String[]) contents.elementAt(0);
						int i = Integer.parseInt(row[2]);
						buff.setCharAt(i, '1');
					}
				}
				else
				{
					String[] title = { Language.apply("代码"), Language.apply("描述") };
					int[] width = { 60, 400 };
					int choice = new MutiSelectForm().open(Language.apply("请选择参与满减满赠活动的规则"), title, width, contents);

					for (int i = 0; i < contents.size(); i++)
					{
						if (i != choice)
						{
							String[] row = (String[]) contents.elementAt(i);
							int j = Integer.parseInt(row[2]);
							buff.setCharAt(j, '0');
						}
						else
						{
							String[] row = (String[]) contents.elementAt(i);
							int j = Integer.parseInt(row[2]);
							buff.setCharAt(j, '1');
						}
					}
				}

				if (append) info.str1 = "9" + buff.toString();
				else info.str1 = buff.toString();
			}

			String line = "";

			String yh = info.str1;
			if (append) yh = info.str1.substring(1);

			if (yh.charAt(0) != '0')
			{
				line += "D";
			}

			if (yh.charAt(1) != '0')
			{
				line += "J";
			}

			if (yh.charAt(2) != '0')
			{
				line += "Q";
			}

			if (yh.charAt(3) != '0')
			{
				line += "Z";
			}

			if (yh.length() > 5 && yh.charAt(5) != '0')
			{
				line += "F";
			}

			if (line.length() > 0)
			{
				sg.name = "(" + line + ")" + sg.name;
			}

			if (!append)
			{
				// str3记录促销组合码
				if (GlobalInfo.sysPara.iscrmtjprice == 'Y') sg.str3 = info.str1 + String.valueOf(Convert.increaseInt(popDef.yhspace, 5).substring(4));
				else sg.str3 = info.str1;
			}
			else
			{
				sg.str3 = info.str1;
			}
			// 将商品属性码,促销规则加入SaleGoodsDef里
			sg.str3 += (";" + goods.specinfo);
			sg.str3 += (";" + popDef.memo);
			sg.str3 += (";" + popDef.poppfjzkl);
			sg.str3 += (";" + popDef.poppfjzkfd);
			sg.str3 += (";" + popDef.poppfj);

			// 只有找到了规则促销单，就记录到小票
			if (!info.str1.equals("0000") || !info.str1.equals(newyhsp))
			{
				sg.zsdjbh = popDef.djbh;
				sg.zszkfd = popDef.poplsjzkfd;
			}
						
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		
	}
	
	/*public boolean doCrmPop()
	{
		return false;
	}*/
	
	/**
	 * 自定义快捷键
	 */
	public void execCustomKey9(boolean keydownonsale)
	{
//		execCustomKey(keydownonsale, GlobalVar.CustomKey9);
		
		String[] title = { "代码", "功能信息描述" };
		int[] width = { 60, 475 };
		Vector contents = new Vector();
		contents.add(new String[] { "13", "退货" });
		contents.add(new String[] { "26", "折让" });
		contents.add(new String[] { "28", "总折让" });
		contents.add(new String[] { "30", "折扣" });
		contents.add(new String[] { "31", "总折扣" });
		contents.add(new String[] { "32", "挂单" });
		contents.add(new String[] { "33", "解挂" });
		contents.add(new String[] { "35", "删除" });
		contents.add(new String[] { "36", "取消" });
		contents.add(new String[] { "38", "价格" });
		contents.add(new String[] { "50", "离开" });
		
		int choice = new MutiSelectForm().open("请选择功能", title, width, contents, true);
		if (choice == -1)
		{
//			new MessageBox("没有选择功能");
			return;
		}
		else {
			String[] row = (String[]) (contents.elementAt(choice));
			if (row[0].equals("13"))//退货
			{
				saleEvent.backInput();
			}
			else if (row[0].equals("26"))//折让
			{
				saleEvent.inputRebatePrice();
			}
			else if (row[0].equals("28"))//总折让
			{
				saleEvent.inputAllRebatePrice();
			}
			else if (row[0].equals("30"))//折扣
			{
				saleEvent.inputRebate();
			}
			else if (row[0].equals("31"))//总折扣
			{
				saleEvent.inputAllRebate();
			}
			else if (row[0].equals("32"))//挂单
			{
				saleEvent.writeHnag();
			}
			else if (row[0].equals("33"))//解挂
			{
				saleEvent.readHang();
			}
			else if (row[0].equals("35"))//删除
			{
				saleEvent.deleteCurrentGoods();
			}
			else if (row[0].equals("36"))//取消
			{
				saleEvent.clearSell();
			}
			else if (row[0].equals("38"))//价格
			{
				saleEvent.inputPrice();
			}
			else if (row[0].equals("50"))//离开
			{
				if (new MessageBox(Language.apply("你确定要离开并锁定收银机吗?"), null, true).verify() == GlobalVar.Key1)
				{
					new PersonnelGoForm();
				}
			}
		}
	}
}
