package com.efuture.javaPos.Test;


import com.efuture.commonKit.Convert;
import com.efuture.commonKit.ManipulatePrecision;
import com.efuture.javaPos.Global.GlobalInfo;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.PointerByReference;

public class bb
{
	public  interface KeeperClient extends Library
	{
		KeeperClient INSTANCE = (KeeperClient)Native.loadLibrary("KeeperClient",KeeperClient.class);
		
		public int misposTrans(String s, PointerByReference point); //动态库函数
		
		public void free(Pointer p);
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		try
		    {
			int zz = 0;
			//System.out.println(Convert.increaseChar("", '2', 1825));
			
		while(true)
		{
			
			String s = "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"			 
				+ "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"			 
				+ "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
				+ "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222" 
				+ "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
			    + "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222";
			//StringBuffer sb = new StringBuffer(Convert.increaseChar("", '2', 1825));
			 StringBuffer sb = new StringBuffer(s);
			 s = null;
			 String platId = Convert.increaseChar("0101", ' ', 20);			
			 String operId = Convert.increaseChar("0344", ' ', 20);//操作员号
			 String TransType = "05";//交易类型
			 String Amount = Convert.increaseCharForward("150", '0', 12);;// 金额
			 String ReferNo = "";// 系统检索号
			 String TerminalId = "";// 原交易终端号
			 String OldAuthDate = "";//原交易日期
			 
			 
			sb.replace(0, 2, TransType);
			sb.replace(21, 33, Amount);
			sb.replace(1785,1805,platId);
			sb.replace(1805, 1825, operId);
			s = sb.toString();		
			sb = null;
		    PointerByReference a = new PointerByReference(); 
		    
			int i = KeeperClient.INSTANCE.misposTrans(s,a);
			s = a.getPointer().getString(0);
			Native.free(Pointer.nativeValue(a.getPointer()));
			a = null;
			System.out.println("长度："+ s.length());
			System.out.println("s = " + s);
			String r = s.substring(230,232);
			s = null;
			System.out.println(r);
			Thread.sleep(2000);
			System.out.println("次数："+zz++);
			
		}
		    }catch(Exception e)
		    {
		    	e.printStackTrace();
		    }
		    
		   				
	}

}
